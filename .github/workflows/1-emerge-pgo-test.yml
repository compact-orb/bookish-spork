name: 1 Emerge PGO Test

on:
  workflow_dispatch:
  schedule:
    - cron: 45 13 */2 * *

env:
  BUNNY_STORAGE_ACCESS_KEY: ${{ secrets.BUNNY_STORAGE_ACCESS_KEY }}
  BUNNY_STORAGE_CDN: ${{ secrets.BUNNY_STORAGE_CDN }}
  BUNNY_STORAGE_ENDPOINT: ${{ secrets.BUNNY_STORAGE_ENDPOINT }}
  BUNNY_STORAGE_ENDPOINT_CDN: ${{ secrets.BUNNY_STORAGE_ENDPOINT_CDN }}
  BUNNY_STORAGE_ZONE_NAME: ${{ secrets.BUNNY_STORAGE_ZONE_NAME }}
  CONFIG_PREFIX: 1
  POWERSHELL_7_ARCHITECTURE: x64
  PACKAGES: net-libs/nodejs

jobs:
  emerge:
    name: Emerge
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Install PowerShell
        run: sudo --preserve-env bash ./install-powershell.sh

      - name: Set Up Gentoo
        run: sudo --preserve-env pwsh -File ./Start-CopyImage.ps1 -From

      - name: Set Up Binary Packages
        run: sudo --preserve-env pwsh -File ./Start-CopyBinaryPackages.ps1 -From

      - name: Mount Filesystems
        run: sudo --preserve-env pwsh -File ./Start-MountFilesystems.ps1

      - name: Emerge and Generate PGO
        run: sudo --preserve-env chroot /mnt/gentoo bash /mnt/emerge.sh --packages "$PACKAGES" --pgo-generate --no-quiet-build --no-pgo-update-check

      - name: Run Benchmarks
        run: |
          chroot /mnt/gentoo emerge dev-lang/php
          aria2c --dir /tmp https://github.com/phoronix-test-suite/phoronix-test-suite/releases/download/v10.8.4/phoronix-test-suite-10.8.4.tar.gz
          tar -xf /tmp/phoronix-test-suite-10.8.4.tar.gz -C /tmp
          sudo bash /tmp/phoronix-test-suite/install-sh
          rm -rf /tmp/phoronix-test-suite-10.8.4.tar.gz /tmp/phoronix-test-suite
          sudo mkdir /root/.phoronix-test-suite
          sudo cp ./user-config.xml /root/.phoronix-test-suite
          sudo phoronix-test-suite batch-benchmark node-web-tooling
          ls /var/tmp/pgo

      - name: Emerge and Use PGO
        run: sudo --preserve-env chroot /mnt/gentoo bash /mnt/emerge.sh --packages "$PACKAGES" --pgo-use --no-quiet-build --no-pgo-update-check

      - name: Unmount Filesystems
        if: always()
        run: sudo --preserve-env pwsh -File ./Start-MountFilesystems.ps1 -Unmount

      #- name: Upload Gentoo Binary Packages
      #  if: always()
      #  run: sudo --preserve-env pwsh -File ./Start-CopyBinaryPackages.ps1 -To

      - name: Upload Gentoo
        if: failure()
        run: sudo --preserve-env pwsh -File ./Start-CopyImage.ps1 -To -Temporary
